!function(e){var n={adminAjax:SupportManager.ajaxurl,doneSuccessHTML:'<div class="settings_save_sucess">Settings Saved</div>',confirm_checker:function(){e(".action_confirm").click(function(n){n.preventDefault();var t=e(this),s=!1;return e(".deleteChecker").SMPopup(),e(".deleteChecker button").click(function(n){if(1==e(this).val()){var a=t.attr("href");"undefined"!=typeof a&&a!==!1&&(window.location.href=a),s=!0}e.SMPopup.destroy()}),s})},removeSuccessHTML:function(){e(".settings_save_sucess").remove()},show_loading:function(){e(".sm_wrap .saving_message").find(".save_msg").text("Saving...").end().animate({right:"10px"})},hide_loading:function(){e(".sm_wrap .saving_message").find(".save_msg").text("Done!").end().delay(1e3).animate({right:"-300px"})},enableSelect2:function(){e(".sm_wrap select").select2()},saveOptions:function(t){if(""!=t.val()){n.show_loading(),n.removeSuccessHTML();var s={name:t.data("option"),value:t.val(),action:e(".sm_settings .action").val(),_wpnonce:e("#_wpnonce").val()};e.post(this.adminAjax,s,function(e){var s=wpAjax.parseAjaxResponse(e,"result");"done"==s.responses[0].data?(t.parent().append(n.doneSuccessHTML),n.hide_loading()):(t.parent().append(s.responses[0].data),n.hide_loading())})}}};jQuery(function(e){n.enableSelect2(),n.confirm_checker(),e(".sm_settings select").change(function(){n.saveOptions(e(this))}),e(".sm_settings input[type=text]").change(function(){n.saveOptions(e(this))})})}(jQuery);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9zb3VyY2Uvc20tYWRtaW4uanMiXSwibmFtZXMiOlsiJCIsInNldHRpbmdzIiwiYWRtaW5BamF4IiwiU3VwcG9ydE1hbmFnZXIiLCJhamF4dXJsIiwiZG9uZVN1Y2Nlc3NIVE1MIiwiY29uZmlybV9jaGVja2VyIiwiY2xpY2siLCJlIiwicHJldmVudERlZmF1bHQiLCJfdGhpcyIsInRoaXMiLCJjb24iLCJTTVBvcHVwIiwidmFsIiwiYXR0ciIsIndpbmRvdyIsImxvY2F0aW9uIiwiaHJlZiIsImRlc3Ryb3kiLCJyZW1vdmVTdWNjZXNzSFRNTCIsInJlbW92ZSIsInNob3dfbG9hZGluZyIsImZpbmQiLCJ0ZXh0IiwiZW5kIiwiYW5pbWF0ZSIsInJpZ2h0IiwiaGlkZV9sb2FkaW5nIiwiZGVsYXkiLCJlbmFibGVTZWxlY3QyIiwic2VsZWN0MiIsInNhdmVPcHRpb25zIiwib2JqIiwiZGF0YSIsIm5hbWUiLCJ2YWx1ZSIsImFjdGlvbiIsIl93cG5vbmNlIiwicG9zdCIsInJlc3BvbnNlIiwicmVzdWx0Iiwid3BBamF4IiwicGFyc2VBamF4UmVzcG9uc2UiLCJyZXNwb25zZXMiLCJwYXJlbnQiLCJhcHBlbmQiLCJqUXVlcnkiLCJjaGFuZ2UiXSwibWFwcGluZ3MiOiJDQUFBLFNBQUFBLEdBRUEsR0FBQUMsSUFFQUMsVUFBQUMsZUFBQUMsUUFDQUMsZ0JBQUEseURBRUFDLGdCQUFBLFdBQ0FOLEVBQUEsbUJBQUFPLE1BQUEsU0FBQUMsR0FDQUEsRUFBQUMsZ0JBV0EsSUFBQUMsR0FBQVYsRUFBQVcsTUFDQUMsR0FBQSxDQWdCQSxPQWZBWixHQUFBLGtCQUFBYSxVQUVBYixFQUFBLHlCQUFBTyxNQUFBLFNBQUFDLEdBRUEsR0FBQSxHQUFBUixFQUFBVyxNQUFBRyxNQUFBLENBQ0EsR0FBQUMsR0FBQUwsRUFBQUssS0FBQSxPQUNBLG9CQUFBQSxJQUFBQSxLQUFBLElBQ0FDLE9BQUFDLFNBQUFDLEtBQUFILEdBRUFILEdBQUEsRUFFQVosRUFBQWEsUUFBQU0sWUFJQVAsS0FJQVEsa0JBQUEsV0FDQXBCLEVBQUEseUJBQUFxQixVQUdBQyxhQUFBLFdBQ0F0QixFQUFBLDRCQUNBdUIsS0FBQSxhQUFBQyxLQUFBLGFBQ0FDLE1BQ0FDLFNBRUFDLE1BQUEsVUFLQUMsYUFBQSxXQUNBNUIsRUFBQSw0QkFDQXVCLEtBQUEsYUFBQUMsS0FBQSxTQUNBQyxNQUNBSSxNQUFBLEtBQ0FILFNBRUFDLE1BQUEsWUFLQUcsY0FBQSxXQUNBOUIsRUFBQSxtQkFBQStCLFdBR0FDLFlBQUEsU0FBQUMsR0FFQSxHQUFBLElBQUFBLEVBQUFuQixNQUFBLENBRUFiLEVBQUFxQixlQUNBckIsRUFBQW1CLG1CQUVBLElBQUFjLElBQ0FDLEtBQUFGLEVBQUFDLEtBQUEsVUFDQUUsTUFBQUgsRUFBQW5CLE1BQ0F1QixPQUFBckMsRUFBQSx3QkFBQWMsTUFDQXdCLFNBQUF0QyxFQUFBLGFBQUFjLE1BR0FkLEdBQUF1QyxLQUFBNUIsS0FBQVQsVUFBQWdDLEVBQUEsU0FBQU0sR0FFQSxHQUFBQyxHQUFBQyxPQUFBQyxrQkFBQUgsRUFBQSxTQUNBLFNBQUFDLEVBQUFHLFVBQUEsR0FBQVYsTUFDQUQsRUFBQVksU0FBQUMsT0FBQTdDLEVBQUFJLGlCQUNBSixFQUFBMkIsaUJBRUFLLEVBQUFZLFNBQUFDLE9BQUFMLEVBQUFHLFVBQUEsR0FBQVYsTUFDQWpDLEVBQUEyQixvQkFTQW1CLFFBQUEsU0FBQS9DLEdBRUFDLEVBQUE2QixnQkFDQTdCLEVBQUFLLGtCQUVBTixFQUFBLHVCQUFBZ0QsT0FBQSxXQUNBL0MsRUFBQStCLFlBQUFoQyxFQUFBVyxTQUdBWCxFQUFBLGlDQUFBZ0QsT0FBQSxXQUNBL0MsRUFBQStCLFlBQUFoQyxFQUFBVyxZQUtBb0MiLCJmaWxlIjoic20tYWRtaW4ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKCBmdW5jdGlvbiggJCApIHtcclxuICAgIFxyXG4gICAgdmFyIHNldHRpbmdzID0ge1xyXG4gICAgICAgIFxyXG4gICAgICAgIGFkbWluQWpheDogU3VwcG9ydE1hbmFnZXIuYWpheHVybCxcclxuICAgICAgICBkb25lU3VjY2Vzc0hUTUw6ICc8ZGl2IGNsYXNzPVwic2V0dGluZ3Nfc2F2ZV9zdWNlc3NcIj5TZXR0aW5ncyBTYXZlZDwvZGl2PicsXHJcbiAgICAgICAgXHJcbiAgICAgICAgY29uZmlybV9jaGVja2VyOiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgJCggJy5hY3Rpb25fY29uZmlybScgKS5jbGljayggZnVuY3Rpb24oIGUgKSB7XHJcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIC8qdmFyIGNvbiA9IGNvbmZpcm0oICdBcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gcGVyZm9ybSB0aGlzIGFjdGlvbj8gVGhpcyBjYW5cXCd0IGJlIHVuZG9uZS4nICk7XHJcbiAgICAgICAgICAgICAgICBpZiggY29uICkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBhdHRyID0gJCggdGhpcyApLmF0dHIoICdocmVmJyApO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKCB0eXBlb2YgYXR0ciAhPT0gdHlwZW9mIHVuZGVmaW5lZCAmJiBhdHRyICE9PSBmYWxzZSApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBhdHRyO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIH0qL1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICB2YXIgX3RoaXMgPSAkKCB0aGlzICksXHJcbiAgICAgICAgICAgICAgICAgICAgY29uID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnLmRlbGV0ZUNoZWNrZXInKS5TTVBvcHVwKCk7IFxyXG4gICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgJCggJy5kZWxldGVDaGVja2VyIGJ1dHRvbicgKS5jbGljayggZnVuY3Rpb24oIGUgKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgaWYoICQoIHRoaXMgKS52YWwoKSA9PSAxICkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYXR0ciA9IF90aGlzLmF0dHIoICdocmVmJyApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiggdHlwZW9mIGF0dHIgIT09IHR5cGVvZiB1bmRlZmluZWQgJiYgYXR0ciAhPT0gZmFsc2UgKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGF0dHI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgJC5TTVBvcHVwLmRlc3Ryb3koKTtcclxuICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIH0gKTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbjtcclxuICAgICAgICAgICAgfSApO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgXHJcbiAgICAgICAgcmVtb3ZlU3VjY2Vzc0hUTUw6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAkKCAnLnNldHRpbmdzX3NhdmVfc3VjZXNzJyApLnJlbW92ZSgpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgXHJcbiAgICAgICAgc2hvd19sb2FkaW5nOiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgJCggJy5zbV93cmFwIC5zYXZpbmdfbWVzc2FnZScgKVxyXG4gICAgICAgICAgICAgICAgLmZpbmQoICcuc2F2ZV9tc2cnICkudGV4dCggJ1NhdmluZy4uLicgKVxyXG4gICAgICAgICAgICAuZW5kKClcclxuICAgICAgICAgICAgICAgIC5hbmltYXRlKFxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmlnaHQ6ICcxMHB4J1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBcclxuICAgICAgICBoaWRlX2xvYWRpbmc6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAkKCAnLnNtX3dyYXAgLnNhdmluZ19tZXNzYWdlJyApXHJcbiAgICAgICAgICAgICAgICAuZmluZCggJy5zYXZlX21zZycgKS50ZXh0KCAnRG9uZSEnIClcclxuICAgICAgICAgICAgLmVuZCgpXHJcbiAgICAgICAgICAgICAgICAuZGVsYXkoIDEwMDAgKVxyXG4gICAgICAgICAgICAgICAgLmFuaW1hdGUoXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByaWdodDogJy0zMDBweCdcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICApO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgXHJcbiAgICAgICAgZW5hYmxlU2VsZWN0MjogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICQoICcuc21fd3JhcCBzZWxlY3QnICkuc2VsZWN0MigpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgXHJcbiAgICAgICAgc2F2ZU9wdGlvbnM6IGZ1bmN0aW9uKCBvYmogKSB7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBpZiggb2JqLnZhbCgpID09ICcnICkgcmV0dXJuO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgc2V0dGluZ3Muc2hvd19sb2FkaW5nKCk7XHJcbiAgICAgICAgICAgIHNldHRpbmdzLnJlbW92ZVN1Y2Nlc3NIVE1MKCk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB2YXIgZGF0YSA9IHtcclxuICAgICAgICAgICAgICAgIG5hbWU6IG9iai5kYXRhKCAnb3B0aW9uJyApLFxyXG4gICAgICAgICAgICAgICAgdmFsdWU6IG9iai52YWwoKSxcclxuICAgICAgICAgICAgICAgIGFjdGlvbjogJCggJy5zbV9zZXR0aW5ncyAuYWN0aW9uJyApLnZhbCgpLFxyXG4gICAgICAgICAgICAgICAgX3dwbm9uY2U6ICQoICcjX3dwbm9uY2UnICkudmFsKClcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICQucG9zdCggdGhpcy5hZG1pbkFqYXgsIGRhdGEsIGZ1bmN0aW9uKCByZXNwb25zZSApIHtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgdmFyIHJlc3VsdCA9IHdwQWpheC5wYXJzZUFqYXhSZXNwb25zZSggcmVzcG9uc2UsICdyZXN1bHQnICk7XHJcbiAgICAgICAgICAgICAgICBpZiggcmVzdWx0LnJlc3BvbnNlc1swXS5kYXRhID09ICdkb25lJyApIHtcclxuICAgICAgICAgICAgICAgICAgICBvYmoucGFyZW50KCkuYXBwZW5kKCBzZXR0aW5ncy5kb25lU3VjY2Vzc0hUTUwgKTtcclxuICAgICAgICAgICAgICAgICAgICBzZXR0aW5ncy5oaWRlX2xvYWRpbmcoKTtcclxuICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgIG9iai5wYXJlbnQoKS5hcHBlbmQoIHJlc3VsdC5yZXNwb25zZXNbMF0uZGF0YSApO1xyXG4gICAgICAgICAgICAgICAgICAgIHNldHRpbmdzLmhpZGVfbG9hZGluZygpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIH0gKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgfTtcclxuICAgIFxyXG4gICAgalF1ZXJ5KCBmdW5jdGlvbiggJCApIHtcclxuICAgICAgICBcclxuICAgICAgICBzZXR0aW5ncy5lbmFibGVTZWxlY3QyKCk7XHJcbiAgICAgICAgc2V0dGluZ3MuY29uZmlybV9jaGVja2VyKCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJCggJy5zbV9zZXR0aW5ncyBzZWxlY3QnICkuY2hhbmdlKCBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgc2V0dGluZ3Muc2F2ZU9wdGlvbnMoICQoIHRoaXMgKSApO1xyXG4gICAgICAgIH0gKTtcclxuICAgICAgICBcclxuICAgICAgICAkKCAnLnNtX3NldHRpbmdzIGlucHV0W3R5cGU9dGV4dF0nICkuY2hhbmdlKCBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgc2V0dGluZ3Muc2F2ZU9wdGlvbnMoICQoIHRoaXMgKSApO1xyXG4gICAgICAgIH0gKTtcclxuICAgICAgICBcclxuICAgIH0gKTtcclxuICAgIFxyXG59ICkgKCBqUXVlcnkgKTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
