!function(e){var n={adminAjax:SupportManager.ajaxurl,doneSuccessHTML:'<div class="settings_save_success">Settings Saved</div>',confirm_checker:function(){e(".action_confirm").click(function(n){n.preventDefault();var t=e(this),s=!1;return e(".deleteChecker").SMPopup(),e(".deleteChecker button").click(function(n){if(1==e(this).val()){var a=t.attr("href");"undefined"!=typeof a&&a!==!1&&(window.location.href=a),s=!0}e.SMPopup.destroy()}),s})},removeSuccessHTML:function(){e(".settings_save_success").remove()},show_loading:function(){e(".sm_wrap .saving_message").find(".save_msg").text("Saving...").end().animate({right:"10px"})},hide_loading:function(){e(".sm_wrap .saving_message").find(".save_msg").text("Done!").end().delay(1e3).animate({right:"-300px"})},enableSelect2:function(){e(".sm_wrap select").select2()},saveOptions:function(t){if(""!=t.val()){n.show_loading(),n.removeSuccessHTML();var s={name:t.data("option"),value:t.val(),action:e(".sm_settings .action").val(),_wpnonce:e("#_wpnonce").val()};e.post(this.adminAjax,s,function(e){var s=wpAjax.parseAjaxResponse(e,"result");"done"==s.responses[0].data?(t.parent().append(n.doneSuccessHTML),n.hide_loading()):(t.parent().append(s.responses[0].data),n.hide_loading())})}}};jQuery(function(e){n.enableSelect2(),n.confirm_checker(),e(".sm_settings select").change(function(){n.saveOptions(e(this))}),e(".sm_settings input[type=text]").change(function(){n.saveOptions(e(this))})})}(jQuery);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9zb3VyY2Uvc20tYWRtaW4uanMiXSwibmFtZXMiOlsiJCIsInNldHRpbmdzIiwiYWRtaW5BamF4IiwiU3VwcG9ydE1hbmFnZXIiLCJhamF4dXJsIiwiZG9uZVN1Y2Nlc3NIVE1MIiwiY29uZmlybV9jaGVja2VyIiwiY2xpY2siLCJlIiwicHJldmVudERlZmF1bHQiLCJfdGhpcyIsInRoaXMiLCJjb24iLCJTTVBvcHVwIiwidmFsIiwiYXR0ciIsIndpbmRvdyIsImxvY2F0aW9uIiwiaHJlZiIsImRlc3Ryb3kiLCJyZW1vdmVTdWNjZXNzSFRNTCIsInJlbW92ZSIsInNob3dfbG9hZGluZyIsImZpbmQiLCJ0ZXh0IiwiZW5kIiwiYW5pbWF0ZSIsInJpZ2h0IiwiaGlkZV9sb2FkaW5nIiwiZGVsYXkiLCJlbmFibGVTZWxlY3QyIiwic2VsZWN0MiIsInNhdmVPcHRpb25zIiwib2JqIiwiZGF0YSIsIm5hbWUiLCJ2YWx1ZSIsImFjdGlvbiIsIl93cG5vbmNlIiwicG9zdCIsInJlc3BvbnNlIiwicmVzdWx0Iiwid3BBamF4IiwicGFyc2VBamF4UmVzcG9uc2UiLCJyZXNwb25zZXMiLCJwYXJlbnQiLCJhcHBlbmQiLCJqUXVlcnkiLCJjaGFuZ2UiXSwibWFwcGluZ3MiOiJDQUFBLFNBQUFBLEdBRUEsR0FBQUMsSUFFQUMsVUFBQUMsZUFBQUMsUUFDQUMsZ0JBQUEsMERBRUFDLGdCQUFBLFdBQ0FOLEVBQUEsbUJBQUFPLE1BQUEsU0FBQUMsR0FDQUEsRUFBQUMsZ0JBV0EsSUFBQUMsR0FBQVYsRUFBQVcsTUFDQUMsR0FBQSxDQWdCQSxPQWZBWixHQUFBLGtCQUFBYSxVQUVBYixFQUFBLHlCQUFBTyxNQUFBLFNBQUFDLEdBRUEsR0FBQSxHQUFBUixFQUFBVyxNQUFBRyxNQUFBLENBQ0EsR0FBQUMsR0FBQUwsRUFBQUssS0FBQSxPQUNBLG9CQUFBQSxJQUFBQSxLQUFBLElBQ0FDLE9BQUFDLFNBQUFDLEtBQUFILEdBRUFILEdBQUEsRUFFQVosRUFBQWEsUUFBQU0sWUFJQVAsS0FJQVEsa0JBQUEsV0FDQXBCLEVBQUEsMEJBQUFxQixVQUdBQyxhQUFBLFdBQ0F0QixFQUFBLDRCQUNBdUIsS0FBQSxhQUFBQyxLQUFBLGFBQ0FDLE1BQ0FDLFNBRUFDLE1BQUEsVUFLQUMsYUFBQSxXQUNBNUIsRUFBQSw0QkFDQXVCLEtBQUEsYUFBQUMsS0FBQSxTQUNBQyxNQUNBSSxNQUFBLEtBQ0FILFNBRUFDLE1BQUEsWUFLQUcsY0FBQSxXQUNBOUIsRUFBQSxtQkFBQStCLFdBR0FDLFlBQUEsU0FBQUMsR0FFQSxHQUFBLElBQUFBLEVBQUFuQixNQUFBLENBRUFiLEVBQUFxQixlQUNBckIsRUFBQW1CLG1CQUVBLElBQUFjLElBQ0FDLEtBQUFGLEVBQUFDLEtBQUEsVUFDQUUsTUFBQUgsRUFBQW5CLE1BQ0F1QixPQUFBckMsRUFBQSx3QkFBQWMsTUFDQXdCLFNBQUF0QyxFQUFBLGFBQUFjLE1BR0FkLEdBQUF1QyxLQUFBNUIsS0FBQVQsVUFBQWdDLEVBQUEsU0FBQU0sR0FFQSxHQUFBQyxHQUFBQyxPQUFBQyxrQkFBQUgsRUFBQSxTQUNBLFNBQUFDLEVBQUFHLFVBQUEsR0FBQVYsTUFDQUQsRUFBQVksU0FBQUMsT0FBQTdDLEVBQUFJLGlCQUNBSixFQUFBMkIsaUJBRUFLLEVBQUFZLFNBQUFDLE9BQUFMLEVBQUFHLFVBQUEsR0FBQVYsTUFDQWpDLEVBQUEyQixvQkFTQW1CLFFBQUEsU0FBQS9DLEdBRUFDLEVBQUE2QixnQkFDQTdCLEVBQUFLLGtCQUVBTixFQUFBLHVCQUFBZ0QsT0FBQSxXQUNBL0MsRUFBQStCLFlBQUFoQyxFQUFBVyxTQUdBWCxFQUFBLGlDQUFBZ0QsT0FBQSxXQUNBL0MsRUFBQStCLFlBQUFoQyxFQUFBVyxZQUtBb0MiLCJmaWxlIjoic20tYWRtaW4ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKCBmdW5jdGlvbiggJCApIHtcclxuICAgIFxyXG4gICAgdmFyIHNldHRpbmdzID0ge1xyXG4gICAgICAgIFxyXG4gICAgICAgIGFkbWluQWpheDogU3VwcG9ydE1hbmFnZXIuYWpheHVybCxcclxuICAgICAgICBkb25lU3VjY2Vzc0hUTUw6ICc8ZGl2IGNsYXNzPVwic2V0dGluZ3Nfc2F2ZV9zdWNjZXNzXCI+U2V0dGluZ3MgU2F2ZWQ8L2Rpdj4nLFxyXG4gICAgICAgIFxyXG4gICAgICAgIGNvbmZpcm1fY2hlY2tlcjogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICQoICcuYWN0aW9uX2NvbmZpcm0nICkuY2xpY2soIGZ1bmN0aW9uKCBlICkge1xyXG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAvKnZhciBjb24gPSBjb25maXJtKCAnQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIHBlcmZvcm0gdGhpcyBhY3Rpb24/IFRoaXMgY2FuXFwndCBiZSB1bmRvbmUuJyApO1xyXG4gICAgICAgICAgICAgICAgaWYoIGNvbiApIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgYXR0ciA9ICQoIHRoaXMgKS5hdHRyKCAnaHJlZicgKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiggdHlwZW9mIGF0dHIgIT09IHR5cGVvZiB1bmRlZmluZWQgJiYgYXR0ciAhPT0gZmFsc2UgKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gYXR0cjtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgICAgICB9Ki9cclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgdmFyIF90aGlzID0gJCggdGhpcyApLFxyXG4gICAgICAgICAgICAgICAgICAgIGNvbiA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICQoJy5kZWxldGVDaGVja2VyJykuU01Qb3B1cCgpOyBcclxuICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICQoICcuZGVsZXRlQ2hlY2tlciBidXR0b24nICkuY2xpY2soIGZ1bmN0aW9uKCBlICkge1xyXG4gICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIGlmKCAkKCB0aGlzICkudmFsKCkgPT0gMSApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGF0dHIgPSBfdGhpcy5hdHRyKCAnaHJlZicgKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoIHR5cGVvZiBhdHRyICE9PSB0eXBlb2YgdW5kZWZpbmVkICYmIGF0dHIgIT09IGZhbHNlICkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBhdHRyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbiA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICQuU01Qb3B1cC5kZXN0cm95KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICB9ICk7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIHJldHVybiBjb247XHJcbiAgICAgICAgICAgIH0gKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIFxyXG4gICAgICAgIHJlbW92ZVN1Y2Nlc3NIVE1MOiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgJCggJy5zZXR0aW5nc19zYXZlX3N1Y2Nlc3MnICkucmVtb3ZlKCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBcclxuICAgICAgICBzaG93X2xvYWRpbmc6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAkKCAnLnNtX3dyYXAgLnNhdmluZ19tZXNzYWdlJyApXHJcbiAgICAgICAgICAgICAgICAuZmluZCggJy5zYXZlX21zZycgKS50ZXh0KCAnU2F2aW5nLi4uJyApXHJcbiAgICAgICAgICAgIC5lbmQoKVxyXG4gICAgICAgICAgICAgICAgLmFuaW1hdGUoXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByaWdodDogJzEwcHgnXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIFxyXG4gICAgICAgIGhpZGVfbG9hZGluZzogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICQoICcuc21fd3JhcCAuc2F2aW5nX21lc3NhZ2UnIClcclxuICAgICAgICAgICAgICAgIC5maW5kKCAnLnNhdmVfbXNnJyApLnRleHQoICdEb25lIScgKVxyXG4gICAgICAgICAgICAuZW5kKClcclxuICAgICAgICAgICAgICAgIC5kZWxheSggMTAwMCApXHJcbiAgICAgICAgICAgICAgICAuYW5pbWF0ZShcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAnLTMwMHB4J1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBcclxuICAgICAgICBlbmFibGVTZWxlY3QyOiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgJCggJy5zbV93cmFwIHNlbGVjdCcgKS5zZWxlY3QyKCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBcclxuICAgICAgICBzYXZlT3B0aW9uczogZnVuY3Rpb24oIG9iaiApIHtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGlmKCBvYmoudmFsKCkgPT0gJycgKSByZXR1cm47XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBzZXR0aW5ncy5zaG93X2xvYWRpbmcoKTtcclxuICAgICAgICAgICAgc2V0dGluZ3MucmVtb3ZlU3VjY2Vzc0hUTUwoKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHZhciBkYXRhID0ge1xyXG4gICAgICAgICAgICAgICAgbmFtZTogb2JqLmRhdGEoICdvcHRpb24nICksXHJcbiAgICAgICAgICAgICAgICB2YWx1ZTogb2JqLnZhbCgpLFxyXG4gICAgICAgICAgICAgICAgYWN0aW9uOiAkKCAnLnNtX3NldHRpbmdzIC5hY3Rpb24nICkudmFsKCksXHJcbiAgICAgICAgICAgICAgICBfd3Bub25jZTogJCggJyNfd3Bub25jZScgKS52YWwoKVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgJC5wb3N0KCB0aGlzLmFkbWluQWpheCwgZGF0YSwgZnVuY3Rpb24oIHJlc3BvbnNlICkge1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICB2YXIgcmVzdWx0ID0gd3BBamF4LnBhcnNlQWpheFJlc3BvbnNlKCByZXNwb25zZSwgJ3Jlc3VsdCcgKTtcclxuICAgICAgICAgICAgICAgIGlmKCByZXN1bHQucmVzcG9uc2VzWzBdLmRhdGEgPT0gJ2RvbmUnICkge1xyXG4gICAgICAgICAgICAgICAgICAgIG9iai5wYXJlbnQoKS5hcHBlbmQoIHNldHRpbmdzLmRvbmVTdWNjZXNzSFRNTCApO1xyXG4gICAgICAgICAgICAgICAgICAgIHNldHRpbmdzLmhpZGVfbG9hZGluZygpO1xyXG4gICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgb2JqLnBhcmVudCgpLmFwcGVuZCggcmVzdWx0LnJlc3BvbnNlc1swXS5kYXRhICk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2V0dGluZ3MuaGlkZV9sb2FkaW5nKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgfSApO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICBqUXVlcnkoIGZ1bmN0aW9uKCAkICkge1xyXG4gICAgICAgIFxyXG4gICAgICAgIHNldHRpbmdzLmVuYWJsZVNlbGVjdDIoKTtcclxuICAgICAgICBzZXR0aW5ncy5jb25maXJtX2NoZWNrZXIoKTtcclxuICAgICAgICBcclxuICAgICAgICAkKCAnLnNtX3NldHRpbmdzIHNlbGVjdCcgKS5jaGFuZ2UoIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICBzZXR0aW5ncy5zYXZlT3B0aW9ucyggJCggdGhpcyApICk7XHJcbiAgICAgICAgfSApO1xyXG4gICAgICAgIFxyXG4gICAgICAgICQoICcuc21fc2V0dGluZ3MgaW5wdXRbdHlwZT10ZXh0XScgKS5jaGFuZ2UoIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICBzZXR0aW5ncy5zYXZlT3B0aW9ucyggJCggdGhpcyApICk7XHJcbiAgICAgICAgfSApO1xyXG4gICAgICAgIFxyXG4gICAgfSApO1xyXG4gICAgXHJcbn0gKSAoIGpRdWVyeSApOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
