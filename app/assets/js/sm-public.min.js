!function(a){var i={adminAjax:SupportManager.ajaxurl,valid_input:!1,form:null,submit_button:null,handle:function(i){this.submit_button=i,this.form=a(i).closest("form"),this.validate(),this.valid_input&&this.save()},validate:function(){this.valid_input=!0},save:function(){this.loading(1);var i=this;a.ajax({type:"POST",url:this.adminAjax,data:a(this.form).serialize(),success:function(a){i.loading(0);var t=jQuery.parseJSON(a);"success"==t.status?"undefined"!=t.redir&&(document.location.href=t.redir):alert(t.msg)}})},loading:function(i){if(1==i){var t='<div class="sm_form_overlay"><img class="sm_form_loading" src="'+SupportManager.assets+'/images/loadingAnimation.gif"></div>';a(t).appendTo(this.form)}else a(".sm_form_overlay").remove()}};jQuery(document).ready(function(a){a(".sm_save_ajax_form").click(function(a){a.preventDefault(),i.handle(this)})})}(jQuery);var world=200;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9zb3VyY2Uvc20tYWpheC5qcyIsIi9zb3VyY2Uvc20tZnJvbnQuanMiXSwibmFtZXMiOlsiJCIsIlNNX0FqYXhfRm9ybSIsImFkbWluQWpheCIsIlN1cHBvcnRNYW5hZ2VyIiwiYWpheHVybCIsInZhbGlkX2lucHV0IiwiZm9ybSIsInN1Ym1pdF9idXR0b24iLCJoYW5kbGUiLCJvYmoiLCJ0aGlzIiwiY2xvc2VzdCIsInZhbGlkYXRlIiwic2F2ZSIsImxvYWRpbmciLCJUSElTIiwiYWpheCIsInR5cGUiLCJ1cmwiLCJkYXRhIiwic2VyaWFsaXplIiwic3VjY2VzcyIsImpzb25fcmVzdWx0IiwicmVzcG9uc2UiLCJqUXVlcnkiLCJwYXJzZUpTT04iLCJzdGF0dXMiLCJyZWRpciIsImRvY3VtZW50IiwibG9jYXRpb24iLCJocmVmIiwiYWxlcnQiLCJtc2ciLCJzdGFydCIsIm92ZXIiLCJhc3NldHMiLCJhcHBlbmRUbyIsInJlbW92ZSIsInJlYWR5IiwiY2xpY2siLCJlIiwicHJldmVudERlZmF1bHQiLCJ3b3JsZCJdLCJtYXBwaW5ncyI6IkNBQUEsU0FBQUEsR0FFQSxHQUFBQyxJQUVBQyxVQUFBQyxlQUFBQyxRQUNBQyxhQUFBLEVBQ0FDLEtBQUEsS0FDQUMsY0FBQSxLQUVBQyxPQUFBLFNBQUFDLEdBQ0FDLEtBQUFILGNBQUFFLEVBQ0FDLEtBQUFKLEtBQUFOLEVBQUFTLEdBQUFFLFFBQUEsUUFDQUQsS0FBQUUsV0FDQUYsS0FBQUwsYUFFQUssS0FBQUcsUUFLQUQsU0FBQSxXQUNBRixLQUFBTCxhQUFBLEdBR0FRLEtBQUEsV0FJQUgsS0FBQUksUUFBQSxFQUNBLElBQUFDLEdBQUFMLElBQ0FWLEdBQUFnQixNQUNBQyxLQUFBLE9BQ0FDLElBQUFSLEtBQUFSLFVBQ0FpQixLQUFBbkIsRUFBQVUsS0FBQUosTUFBQWMsWUFDQUMsUUFBQSxTQUFBQyxHQUVBUCxFQUFBRCxRQUFBLEVBQ0EsSUFBQVMsR0FBQUMsT0FBQUMsVUFBQUgsRUFFQSxZQUFBQyxFQUFBRyxPQUVBLGFBQUFILEVBQUFJLFFBRUFDLFNBQUFDLFNBQUFDLEtBQUFQLEVBQUFJLE9BS0FJLE1BQUFSLEVBQUFTLFNBT0FsQixRQUFBLFNBQUFtQixHQUVBLEdBQUEsR0FBQUEsRUFDQSxDQUNBLEdBQUFDLEdBQUEsa0VBQ0EvQixlQUFBZ0MsT0FBQSxzQ0FFQW5DLEdBQUFrQyxHQUFBRSxTQUFBMUIsS0FBQUosVUFJQU4sR0FBQSxvQkFBQXFDLFVBWUFiLFFBQUFJLFVBQUFVLE1BQUEsU0FBQXRDLEdBRUFBLEVBQUEsc0JBQUF1QyxNQUFBLFNBQUFDLEdBQ0FBLEVBQUFDLGlCQUNBeEMsRUFBQU8sT0FBQUUsV0FLQWMsT0N2RkEsSUFBQWtCLE9BQUEiLCJmaWxlIjoic20tcHVibGljLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIjsoIGZ1bmN0aW9uKCAkICkge1xyXG4gICAgXHJcbiAgICB2YXIgU01fQWpheF9Gb3JtID0ge1xyXG4gICAgICAgIFxyXG4gICAgICAgIGFkbWluQWpheDogU3VwcG9ydE1hbmFnZXIuYWpheHVybCxcclxuICAgICAgICB2YWxpZF9pbnB1dDogZmFsc2UsXHJcbiAgICAgICAgZm9ybTogbnVsbCxcclxuICAgICAgICBzdWJtaXRfYnV0dG9uOiBudWxsLFxyXG4gICAgICAgIFxyXG4gICAgICAgIGhhbmRsZTogZnVuY3Rpb24ob2JqKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuc3VibWl0X2J1dHRvbiA9IG9iajtcclxuICAgICAgICAgICAgICAgIHRoaXMuZm9ybSA9ICQob2JqKS5jbG9zZXN0KCAnZm9ybScgKTtcclxuICAgICAgICAgICAgICAgIHRoaXMudmFsaWRhdGUoKTtcclxuICAgICAgICAgICAgICAgIGlmKCB0aGlzLnZhbGlkX2lucHV0IClcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNhdmUoKTsgICAgXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgdmFsaWRhdGUgOiBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudmFsaWRfaW5wdXQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgIHNhdmUgOiBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAvL3ZhciBvdmVybGF5X2h0bWwgPSAnPGRpdiBjbGFzcyA9IFwic21fZm9ybV9vdmVybGF5XCIgc3R5bGU9XCJiYWNrZ3JvdW5kOiNjY2NjY2M7IGhlaWdodDoyMDBweDsgcG9zaXRpb246YWJzb2x1dGU7XCI+bG9hZGlnLi4uLjwvZGl2Pic7XHJcbiAgICAgICAgICAgICAgICAvLyQodGhpcy5mb3JtKS5wcmVwZW5kKG92ZXJsYXlfaHRtbCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxvYWRpbmcoMSk7XHJcbiAgICAgICAgICAgICAgICB2YXIgVEhJUyA9IHRoaXM7XHJcbiAgICAgICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgICAgdHlwZTogXCJQT1NUXCIsXHJcbiAgICAgICAgICAgICAgICAgICB1cmw6IHRoaXMuYWRtaW5BamF4LFxyXG4gICAgICAgICAgICAgICAgICAgZGF0YTogJCh0aGlzLmZvcm0pLnNlcmlhbGl6ZSgpLCAvLyBzZXJpYWxpemVzIHRoZSBmb3JtJ3MgZWxlbWVudHMuXHJcbiAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbihqc29uX3Jlc3VsdClcclxuICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgIFRISVMubG9hZGluZygwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICB2YXIgcmVzcG9uc2U9alF1ZXJ5LnBhcnNlSlNPTigganNvbl9yZXN1bHQgKVxyXG4gICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgIGlmKCByZXNwb25zZS5zdGF0dXMgPT0gXCJzdWNjZXNzXCIgKVxyXG4gICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBpZiggcmVzcG9uc2UucmVkaXIgIT0ndW5kZWZpbmVkJyApXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5sb2NhdGlvbi5ocmVmID0gcmVzcG9uc2UucmVkaXI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBhbGVydChyZXNwb25zZS5tc2cpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIH0sLy9lbmQgc2F2ZVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgbG9hZGluZyA6IGZ1bmN0aW9uKHN0YXJ0KSB7XHJcbiAgICAgICAgICAgICAgICAvLyBhZGQgdGhlIG92ZXJsYXkgd2l0aCBsb2FkaW5nIGltYWdlIHRvIHRoZSBwYWdlXHJcbiAgICAgICAgICAgICAgICBpZiggc3RhcnQgPT0gMSlcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgb3ZlciA9ICc8ZGl2IGNsYXNzPVwic21fZm9ybV9vdmVybGF5XCI+JyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICc8aW1nIGNsYXNzPVwic21fZm9ybV9sb2FkaW5nXCIgc3JjPVwiJytTdXBwb3J0TWFuYWdlci5hc3NldHMrJy9pbWFnZXMvbG9hZGluZ0FuaW1hdGlvbi5naWZcIj4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJzwvZGl2Pic7IFxyXG4gICAgICAgICAgICAgICAgICAgICQob3ZlcikuYXBwZW5kVG8odGhpcy5mb3JtKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAkKCcuc21fZm9ybV9vdmVybGF5JykucmVtb3ZlKCk7ICAgIFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9Ly9lbmQgbG9hZGluZyAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgXHJcbiAgICB9Oy8vZW5kIFNNX0FqYXhfRm9ybVxyXG4gXHJcbiBcclxuICAgIFxyXG4gXHJcbiAgICBqUXVlcnkoZG9jdW1lbnQpLnJlYWR5KCBmdW5jdGlvbiggJCApIHtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICQoICcuc21fc2F2ZV9hamF4X2Zvcm0nICkuY2xpY2soIGZ1bmN0aW9uKCBlICkgeyAgICBcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICBTTV9BamF4X0Zvcm0uaGFuZGxlKHRoaXMpO1xyXG4gICAgICAgIH0gKTtcclxuICAgICAgICBcclxuICAgIH0gKTsvL2RvY3VlbWVudCByZWFkeVxyXG4gICAgXHJcbn0gKSAoIGpRdWVyeSApO1xyXG5cclxuXHJcbiIsInZhciB3b3JsZCA9IDIwMDsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
